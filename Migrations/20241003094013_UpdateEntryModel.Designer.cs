// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SongDiary.Data;

#nullable disable

namespace SongDiary.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241003094013_UpdateEntryModel")]
    partial class UpdateEntryModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SongDiary.Models.EntryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Emoji")
                        .HasColumnType("text");

                    b.Property<string>("Mood")
                        .HasColumnType("text");

                    b.Property<string>("SongTitle")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Entries");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Date = new DateTime(2024, 10, 3, 9, 40, 12, 910, DateTimeKind.Utc).AddTicks(580),
                            Description = "A song that promotes peace and unity.",
                            Emoji = "🕊️",
                            Mood = "Reflective",
                            SongTitle = "Imagine"
                        },
                        new
                        {
                            Id = -2,
                            Date = new DateTime(2024, 10, 2, 9, 40, 12, 910, DateTimeKind.Utc).AddTicks(580),
                            Description = "A catchy pop song about love and attraction.",
                            Emoji = "😍",
                            Mood = "Happy",
                            SongTitle = "Shape of You"
                        },
                        new
                        {
                            Id = -3,
                            Date = new DateTime(2024, 10, 1, 9, 40, 12, 910, DateTimeKind.Utc).AddTicks(590),
                            Description = "An upbeat synth-pop song with a retro vibe.",
                            Emoji = "🎉",
                            Mood = "Energetic",
                            SongTitle = "Blinding Lights"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
